* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    padding: 2rem;
    overflow: hidden; /* hide notifications that animate outside of the body */
}

html,
body {
    height: 100vw;
}

* {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

/* =======
Toast
========== */

.toast {
    border-radius: 6px;
    padding: .5rem 1rem;
    border: 1px solid grey;
    box-shadow: 0px 0px 2px #00000059;
    line-height: 100%;

    /* first toast is positioned absolutely to the bottom right of the screen */
    position: absolute;
    /* popovers set inset to 0, so we must reset top/left to auto */
    inset: auto 1rem 1rem auto;
    animation: toast-show .6s ease-in-out 1 forwards;
    transition: .3s ease-out inset-block-end, .3s ease-out inset-inline-end;

    /* if we mess with the popover element's display property, show and hide behavior will have indeterminate & non-functional behavior. use a wrapper to layout a popover's children: */
    .grid-wrapper {
        display: grid;
        grid: auto / auto auto;
        align-items: center;
        gap: 1rem;
    }

    .toast__button {
        padding: .5rem;
    }
}

.toast.closing {
    animation: toast-hide 1s ease-in-out 1 forwards;
}

/* =======
Buttons
========== */

.btn {
    border: 1px solid grey;
    padding: .5rem 1rem;
    font-weight: 500;
    border-radius: 6px;
    cursor: pointer;
    width: fit-content;
    /* don't stretch via justify-self default if a grid child */

    transition: .3s background;
}

.btn--success {
    border: 1px solid rgb(31, 93, 38);
    background: rgb(115, 193, 115);

    &:hover {
        background: rgb(100, 186, 100);
    }
}

.btn--toast {
    border: none;
    border-radius: 50%;

    /* fix the size of the button irregardless of its contents */
    width: 3rem;
    aspect-ratio: 1 / 1;

    background:
        no-repeat center / 50% 50% url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-width='2' d='M20 20L4 4m16 0L4 20'/%3E%3C/svg%3E");

    background-color: rgb(43, 43, 43);

    display: grid;
    grid: 100% / 100%;
    place-items: center;
    /* why do the default grid tracks not fill to 100%? */

    &:hover {
        background-color: rgb(14, 13, 13);
    }
}

.toast--success {
    border: 2px solid rgb(87, 137, 45);
    background: rgb(184, 255, 184);
    box-shadow: 0px 0px 2px #25773640;

    overflow: hidden;
    /* don't scroll to accomodate rotated ::before icon */

    &::before {
        content: "";
        z-index: -1;
        /* display behind the text within the popover */
        left: 0rem;
        height: 3rem;
        aspect-ratio: 1 / 1;

        background-color: rgb(165, 208, 165);
        /* svgs aren't 100% of height and width */
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 0 0'%3E%3Cpath fill='%23000' d='m14 21.414l-5-5.001L10.413 15L14 18.586L21.585 11L23 12.415z'/%3E%3Cpath fill='%23000' d='M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2m0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12'/%3E%3C/svg%3E");
    }
}

#btn--new-popover {
    
}

/* =======
Notification animations
========== */

@keyframes toast-show {
    from {
        transform: translate(5rem, 3.5rem);
    }
    50% {
        transform: translate(-1rem, -1rem);
    }
    75% {
        transform: translate(.5rem, .5rem);
    }
    to {
      
        transform: translate(0, 0);
    }
}


@keyframes toast-hide {
    from {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(-3rem, 0);
    }
    75% {
        transform: translate(-3rem, 0);
    }
    to {
        transform: translate(50vw, 0);
    }
}

/* =======
Utilities
========== */

.sr-only {
    position: absolute;
    left: -99999px;
}